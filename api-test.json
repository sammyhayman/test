sportsindex.json
{
    "openapi": "3.0.0",
    "info": {
        "title": "Sportsindex API",
        "description": "Developers should use client ID = 7 and client secret = Ar2VvF8odVQnK2iyV1BLBmowMKoWSi2sY02llbu7 to access api.sportsindex.dk (production) and client ID = 2 and client secret = bs2Et2gvDhi3nzr1FWJTueq5o37nUiGjjed46zBR to access stgapi.sportsindex.dk (staging) on local development machines.",
        "version": "1.0.0"
    },
    "servers": [{
        "url": "https:\/\/api.sportsindex.dk"
    }],
    "paths": {
        "\/oauth\/token": {
            "post": {
                "tags": ["authentication"],
                "summary": "Get access token.",
                "description": "Returns a JSON response containing access_token, and expires_in attributes",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ClientForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A JSON response containing access_token, refresh_token, and expires_in attributes.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "token_type": {
                                            "description": "Contains 'Bearer'",
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "description": "The number of seconds until the access token expires",
                                            "type": "integer",
                                            "example": 1296000
                                        },
                                        "access_token": {
                                            "description": "You should send the 'Authorization: Bearer ACCESS_TOKEN_HERE' header to access API endpoints",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/archive_markets": {
            "get": {
                "summary": "Get list of archive markets",
                "description": "Returns list of archive markets",
                "operationId": "51b79474412c85e229b4b5100232f5d7",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "event_ids",
                    "name": "event_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "market_type_ids",
                    "name": "market_type_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "period_ids",
                    "name": "period_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "line",
                    "name": "line",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "with_odds",
                    "name": "with_odds",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "parameter": "odds_type",
                    "name": "odds_type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "provider_ids",
                    "name": "provider_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "relations",
                    "name": "relations[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["archiveMarketOutcomes", "archiveMarketOutcomes.archiveOdds", "archiveMarketOutcomes.outcome"]
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of archive markets",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/ArchiveMarket"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/archive_market_outcomes": {
            "get": {
                "summary": "Get list of archive market outcomes",
                "description": "Returns list of archive market outcomes",
                "operationId": "4401936bb2911fba820deaf062fb5db7",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "market_ids",
                    "name": "market_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of archive market outcomes",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/ArchiveMarketOutcome"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/archive_odds": {
            "get": {
                "summary": "Get list of archive odds",
                "description": "Returns list of archive odds",
                "operationId": "f89b37aaeed5d77c5821e76afc5cf1e0",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "market_outcome_ids",
                    "name": "market_outcome_ids[]",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "example": 1
                }, {
                    "parameter": "provider_ids",
                    "name": "provider_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of archive odds",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/ArchiveOdds"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/channels": {
            "get": {
                "summary": "Get list of channels",
                "description": "Get list of channels",
                "operationId": "9264b6cb97c9ba03d35b3b993df3a20c",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "ids",
                    "name": "ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "int"
                        }
                    }
                }, {
                    "parameter": "del",
                    "name": "del",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["yes", "no"]
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of events with relations for creation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Channel"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/client_competitions": {
            "get": {
                "summary": "Get list of client competitions",
                "description": "Returns list of client competitions",
                "operationId": "cbecd77a09f4e37d15efd06a1237d7e2",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "type",
                    "name": "type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of client competitions",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/ClientCompetition"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            },
            "post": {
                "summary": "Set client competition IDs",
                "description": "Updates client competition IDs",
                "operationId": "f1a322642034f022fc33f00ef2ea074f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "required": ["type"],
                                "properties": {
                                    "type": {},
                                    "competition_ids": {
                                        "description": "Comma-separated list of competition IDs"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SuccessJson"
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/commentaries": {
            "get": {
                "summary": "Get match commentaries",
                "description": "Returns list of commentaries",
                "operationId": "da29c760023f217aad476869919f9774",
                "parameters": [{
                    "parameter": "event_id",
                    "name": "event_id",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "example": 20836321
                }, {
                    "parameter": "min_id",
                    "name": "min_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "lang_id",
                    "name": "lang_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of commentaries",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "elapsed": {
                                                "type": "integer"
                                            },
                                            "elapsed_plus": {
                                                "type": "integer"
                                            },
                                            "text": {
                                                "type": "string"
                                            },
                                            "updated_at": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/competitions": {
            "get": {
                "summary": "Get list of competitions",
                "description": "Returns list of competitions",
                "operationId": "6501eed4257b1ae1fca70134f7b1d6ab",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/lang_id"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "sport_ids",
                    "name": "sport_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "region_ids",
                    "name": "region_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "gender",
                    "name": "gender",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "parent_ids",
                    "name": "parent_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "with_parent",
                    "name": "with_parent",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "$ref": "#\/components\/parameters\/search"
                }, {
                    "$ref": "#\/components\/parameters\/search_lang_id"
                }, {
                    "parameter": "search_with",
                    "name": "search_with[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["region"]
                        }
                    }
                }, {
                    "parameter": "client_competition_type",
                    "name": "client_competition_type",
                    "in": "query",
                    "description": "Get client competitions of the defined type",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "event_min_start_time",
                    "name": "event_min_start_time",
                    "in": "query",
                    "description": "Get competitions that have events with start time >= event_min_start_time",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "event_max_start_time",
                    "name": "event_max_start_time",
                    "in": "query",
                    "description": "Get competitions that have events with start time <= event_max_start_time",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "event_statuses",
                    "name": "event_statuses",
                    "in": "query",
                    "description": "Get competitions that have events with such statuses",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of competitions",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Competition"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/competition_mappings": {
            "get": {
                "summary": "Get list of competition mappings",
                "description": "Returns list of competition mappings",
                "operationId": "b15f79db489d72ac20a9e4d0d71bf120",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "ex_id",
                    "name": "ex_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "ex_ids",
                    "name": "ex_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "source_id",
                    "name": "source_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "sport_id",
                    "name": "sport_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "competition_ids",
                    "name": "competition_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }],
                "responses": {
                    "200": {
                        "description": "A list of competition mappings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/CompetitionMapping"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/competition_metas": {
            "get": {
                "summary": "Get list of competition metas",
                "description": "Returns list of competition meta",
                "operationId": "d50c3e2e0cead5f814dc57ff768764a5",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "competition_ids",
                    "name": "competition_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of competition meta",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/CompetitionMeta"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/competition_stage_templates": {
            "get": {
                "summary": "Get list of competition stage templates",
                "description": "Returns list of competition stage templates",
                "operationId": "ebab37b33661dd87a4c58e0c3b16962f",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "competition_ids",
                    "name": "competition_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of competition stage templates",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/CompetitionStageTemplate"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/competitor_athlete_teams": {
            "get": {
                "summary": "Get list of competitor athlete teams",
                "description": "Returns list of competitor athlete teams",
                "operationId": "32754e22f0a3745bf664ad58fcdbc8c1",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "competitor_athlete_ids",
                    "name": "competitor_athlete_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }],
                "responses": {
                    "200": {
                        "description": "A list of competitor athlete teams",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/CompetitorAthleteTeam"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/competitors": {
            "get": {
                "summary": "Get list of competitors",
                "description": "Returns list of competitors",
                "operationId": "f5930c6d0d90b0c3fa17a5f6d6a60119",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/lang_id"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "sport_ids",
                    "name": "sport_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "region_ids",
                    "name": "region_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "gender",
                    "name": "gender",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "competitor_types",
                    "name": "competitor_types[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "$ref": "#\/components\/parameters\/search"
                }, {
                    "$ref": "#\/components\/parameters\/search_lang_id"
                }],
                "responses": {
                    "200": {
                        "description": "A list of competitors",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Competitor"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/competitor_mappings": {
            "get": {
                "summary": "Get list of competitor mappings",
                "description": "Returns list of competitor mappings",
                "operationId": "0ca65f928148d2a55f5faea4546ee8e6",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "ex_ids",
                    "name": "ex_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "source_id",
                    "name": "source_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "competitor_ids",
                    "name": "competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "competitor_type",
                    "name": "competitor_type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }],
                "responses": {
                    "200": {
                        "description": "A list of competitor mappings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/CompetitorMapping"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/competitor_metas": {
            "get": {
                "summary": "Get list of competitor metas",
                "description": "Returns list of competitor metas",
                "operationId": "75e6661946f21e548e649c58bac1aaae",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "competitor_ids",
                    "name": "competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "types",
                    "name": "types[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }],
                "responses": {
                    "200": {
                        "description": "A list of competitor metas",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/CompetitorMeta"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/countries": {
            "get": {
                "summary": "Get list of countries",
                "description": "Returns list of countries",
                "operationId": "124db23223a1f41b77e6de87362eaa2b",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of countries",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Country"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/event_competitors": {
            "get": {
                "summary": "Get list of event competitors",
                "description": "Returns list of event competitors",
                "operationId": "64171d9ab80dc60d435892872b732331",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "event_ids",
                    "name": "event_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "positions",
                    "name": "positions[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "relations",
                    "name": "relations[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["competitor", "results"]
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of event competitors",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/EventCompetitor"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/events": {
            "get": {
                "summary": "Get list of events",
                "description": "Returns list of events",
                "operationId": "1031372a8175e66ba1b46a820fe040d0",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "start_times",
                    "name": "start_times[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "parameter": "min_start_time",
                    "name": "min_start_time",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "max_start_time",
                    "name": "max_start_time",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "statuses",
                    "name": "statuses[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "parameter": "tournament_stage_ids",
                    "name": "tournament_stage_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "names",
                    "name": "names[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "parameter": "sport_ids",
                    "name": "sport_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "competition_ids",
                    "name": "competition_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "tournament_ids",
                    "name": "tournament_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "client_competition_type",
                    "name": "client_competition_type",
                    "in": "query",
                    "description": "Get events with client competitions of the defined type",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "ts_name_regex",
                    "name": "ts_name_regex",
                    "in": "query",
                    "description": "Tournament stage name should match this regular expression",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "with_odds",
                    "name": "with_odds",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "parameter": "market_type_id",
                    "name": "market_type_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "market_line",
                    "name": "market_line",
                    "in": "query",
                    "schema": {
                        "type": "float"
                    }
                }, {
                    "parameter": "market_period_id",
                    "name": "market_period_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "provider_ids",
                    "name": "provider_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "odds_statuses",
                    "name": "odds_statuses[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "parameter": "between_competitor_ids",
                    "name": "between_competitor_ids[]",
                    "in": "query",
                    "description": "Get events where such teams\/players play",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "last_start_time",
                    "name": "last_start_time",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "last_id",
                    "name": "last_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "with_logo",
                    "name": "with_logo",
                    "in": "query",
                    "description": "Get events where all the event competitors have a logo image",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "parameter": "incl_enetpulse_id",
                    "name": "incl_enetpulse_id",
                    "in": "query",
                    "description": "Includes enetpulse ID for each event and competitor",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "parameter": "order_by",
                    "name": "order_by",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["start_time"]
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }, {
                    "$ref": "#\/components\/parameters\/search"
                }, {
                    "parameter": "name_regex",
                    "name": "name_regex",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "relations",
                    "name": "relations[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["eventCompetitors", "eventCompetitors.competitor", "eventCompetitors.results"]
                        }
                    }
                }, {
                    "parameter": "with_channels",
                    "name": "with_channels",
                    "in": "query",
                    "description": "Includes channels data for each event",
                    "schema": {
                        "type": "string",
                        "enum": ["true", "false", "0", "1"]
                    }
                }, {
                    "parameter": "channel_country",
                    "name": "channel_country",
                    "in": "query",
                    "description": "Filters channels by country ID",
                    "schema": {
                        "type": "integer"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of events",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Event"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/event_relations": {
            "get": {
                "summary": "Get list of events with the relations",
                "description": "Gets events with the relations filtered by start_time between start_time_from and start_time_to.\n     *     If updated_at provided return only events updated after given updated_at or one of they relations updated after given updated_at",
                "operationId": "bed0110921e7a299ce1df6ed51a653ab",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "start_time_from",
                    "name": "start_time_from",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "2021-12-12 00:00:00"
                }, {
                    "parameter": "start_time_to",
                    "name": "start_time_to",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "2021-12-15 00:00:00"
                }, {
                    "parameter": "updated_at",
                    "name": "updated_at",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "with_channel",
                    "name": "with_channel",
                    "in": "query",
                    "description": "Optional. Allowed values are 'yes' or 'no'",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "event_ids",
                    "name": "event_ids[]",
                    "in": "query",
                    "description": "Optional. Array of event_ids for get data",
                    "required": false,
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "sport_ids",
                    "name": "sport_ids[]",
                    "in": "query",
                    "description": "Optional. Array of sport_ids to filter events by",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of events with relations for creation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "tournament_stage_id": {
                                                            "type": "integer"
                                                        },
                                                        "start_time": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "enum": ["notstarted", "inprogress", "finished", "interrupted", "postponed", "cancelled", "unknown", "deleted"]
                                                        },
                                                        "created_at": {
                                                            "type": "string"
                                                        },
                                                        "updated_at": {
                                                            "type": "string"
                                                        },
                                                        "tournament_stage": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "tournament_id": {
                                                                    "type": "integer"
                                                                },
                                                                "gender": {
                                                                    "type": "string",
                                                                    "enum": ["m", "f", "mix"],
                                                                    "nullable": true
                                                                },
                                                                "region_id": {
                                                                    "type": "integer",
                                                                    "nullable": true
                                                                },
                                                                "start_time": {
                                                                    "type": "string",
                                                                    "nullable": true
                                                                },
                                                                "end_time": {
                                                                    "type": "string",
                                                                    "nullable": true
                                                                },
                                                                "del": {
                                                                    "type": "string",
                                                                    "enum": ["no", "yes"]
                                                                },
                                                                "created_at": {
                                                                    "type": "string"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string"
                                                                },
                                                                "tournament": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "competition_id": {
                                                                            "type": "integer"
                                                                        },
                                                                        "ex_id": {
                                                                            "type": "integer",
                                                                            "nullable": true
                                                                        },
                                                                        "del": {
                                                                            "type": "string",
                                                                            "enum": ["no", "yes"]
                                                                        },
                                                                        "created_at": {
                                                                            "type": "string"
                                                                        },
                                                                        "updated_at": {
                                                                            "type": "string"
                                                                        },
                                                                        "competition": {
                                                                            "$ref": "#\/components\/schemas\/Competition"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "event_competitors": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#\/components\/schemas\/EventCompetitor"
                                                            }
                                                        },
                                                        "event_broadcasters": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "event_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "country_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "channel_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "channel_start_time": {
                                                                        "type": "string"
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "string"
                                                                    },
                                                                    "blocked_regions": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "integer"
                                                                        }
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "broadcaster_import_events": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "event_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "country_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "channel_id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "channel_start_time": {
                                                                        "type": "string"
                                                                    },
                                                                    "updated_at": {
                                                                        "type": "string"
                                                                    },
                                                                    "blocked_regions": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "integer"
                                                                        }
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/event_forecasts": {
            "get": {
                "summary": "Get list of event forecasts",
                "description": "Returns list of event forecasts",
                "operationId": "3ab14aaddd935fca96f80a7485616f67",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "event_ids",
                    "name": "event_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of event forecasts",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/EventForecast"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/event_incidents": {
            "get": {
                "summary": "Get list of event incidents",
                "description": "Returns list of event incidents",
                "operationId": "d9e05e127121f5e28076fa1320e945c1",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "event_ids",
                    "name": "event_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "min_id",
                    "name": "min_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of event incidents",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/EventIncident"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/event_incident_details": {
            "get": {
                "summary": "Get list of event incident details",
                "description": "Returns list of event incident details",
                "operationId": "3420ab40bd1266eca1083834ea3ce3ea",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "event_incident_ids",
                    "name": "event_incident_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of event incident details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/EventIncidentDetail"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/event_incident_types": {
            "get": {
                "summary": "Get list of event incident_types",
                "description": "Returns list of event incident_types",
                "operationId": "42796d1ae6af40578338fac9a851d4d2",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of event incident_types",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/EventIncidentType"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/event_incident_type_texts": {
            "get": {
                "summary": "Get list of event incident type texts",
                "description": "Returns list of event incident type texts",
                "operationId": "94d21bd03e3fe78eb3f06e96cc2394fd",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "event_incident_type_ids",
                    "name": "event_incident_type_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of event incident type texts",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/EventIncidentTypeText"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/event_metas": {
            "get": {
                "summary": "Get list of event metas",
                "description": "Returns list of event metas",
                "operationId": "dced195f7009736281ec2511f1b9e849",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "event_ids",
                    "name": "event_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of event metas",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/EventMeta"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/event_score": {
            "get": {
                "summary": "Get score for events",
                "description": "Get score for events  from given event_ids",
                "operationId": "e167c40bdc54465867356ae59a9f4685",
                "parameters": [{
                    "parameter": "event_ids",
                    "name": "event_ids[]",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "example": 24647659
                }],
                "responses": {
                    "200": {
                        "description": "A list of events score",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": ["notstarted", "inprogress", "finished", "interrupted", "postponed", "cancelled", "unknown", "deleted"]
                                            },
                                            "updated_at": {
                                                "type": "string"
                                            },
                                            "score": {
                                                "type": "string"
                                            },
                                            "event_competitors": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "competitor_id": {
                                                            "type": "integer"
                                                        },
                                                        "position": {
                                                            "type": "integer"
                                                        },
                                                        "result": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/event_search_items": {
            "get": {
                "summary": "Get list of event search items",
                "description": "Returns list of event search items",
                "operationId": "6e30c4d5e8c63caaf644a9b2002d1b39",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "language_id",
                    "name": "language_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "min_start_time",
                    "name": "min_start_time",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "max_start_time",
                    "name": "max_start_time",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "competition_ids",
                    "name": "competition_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "sport_ids",
                    "name": "sport_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "event_statuses",
                    "name": "event_statuses[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "parameter": "order_by",
                    "name": "order_by",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["start_time"]
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }, {
                    "$ref": "#\/components\/parameters\/search"
                }],
                "responses": {
                    "200": {
                        "description": "A list of event search items",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/EventSearchItem"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/finished_events": {
            "get": {
                "summary": "Get list of finished events",
                "description": "Returns list of finished events",
                "operationId": "ae359d5f1bbcb65e6e3aea8bf388dcc1",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "min_id",
                    "name": "min_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "order_by",
                    "name": "order_by",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }],
                "responses": {
                    "200": {
                        "description": "A list of finished events",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/FinishedEvent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/incidents": {
            "get": {
                "summary": "Get list of incidents",
                "description": "Returns list of incidents",
                "operationId": "425a4524d8199f555c5068f654fb3a49",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "event_competitor_ids",
                    "name": "event_competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "competitor_ids",
                    "name": "competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of incidents",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Incident"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/incident_types": {
            "get": {
                "summary": "Get list of incident types",
                "description": "Returns list of incident types",
                "operationId": "494f7e255bf05faecd566e3ebad3e4b3",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of incident types",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/IncidentType"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/injuries": {
            "get": {
                "summary": "Get list of injuries",
                "description": "Returns list of injuries",
                "operationId": "d9fd648be0d42e9556a98035126b8e24",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "competition_ids",
                    "name": "competition_ids[]",
                    "in": "query",
                    "description": "Return only the injuries with the given competitions",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "competitor_ids",
                    "name": "competitor_ids[]",
                    "in": "query",
                    "description": "Return only the injuries with the given competitors",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "team_ids",
                    "name": "team_ids[]",
                    "in": "query",
                    "description": "Return only the injuries with the given teams",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "min_last_update",
                    "name": "min_last_update",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of injuries",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "allOf": [{
                                                        "$ref": "#\/components\/schemas\/LineupPlayer"
                                                    }, {
                                                        "properties": {
                                                            "competitor": {
                                                                "$ref": "#\/components\/schemas\/Competitor"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }, {
                                                        "properties": {
                                                            "injury_competitions": {
                                                                "type": "array",
                                                                "items": {
                                                                    "$ref": "#\/components\/schemas\/Competition"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }]
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/injury_teams": {
            "get": {
                "summary": "Get list of injury teams",
                "description": "Returns list of injury teams",
                "operationId": "e71d0dacc592e58ab00217db1a6ad525",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "injury_ids",
                    "name": "injury_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of injury teams",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/InjuryTeam"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/injury_types": {
            "get": {
                "summary": "Get list of injury types",
                "description": "Returns list of injury types",
                "operationId": "176b46612c908499ccdb695dbe99b4d7",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of injury types",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/InjuryType"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/languages": {
            "get": {
                "summary": "Get list of languages",
                "description": "Returns list of languages",
                "operationId": "13f72dfeebea6adfa84684cf31bade15",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of languages",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Language"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/lineups": {
            "get": {
                "summary": "Get list of lineups",
                "description": "Returns list of lineups",
                "operationId": "2a03914a2536b354a1b15ee1ae88d608",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "event_ids",
                    "name": "event_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "competitor_ids",
                    "name": "competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "min_last_update",
                    "name": "min_last_update",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "max_last_update",
                    "name": "max_last_update",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "order_by",
                    "name": "order_by",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["last_update"]
                    }
                }, {
                    "parameter": "with_deleted_players",
                    "name": "with_deleted_players",
                    "in": "query",
                    "schema": {
                        "type": "boolean",
                        "nullable": true
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }, {
                    "parameter": "relations",
                    "name": "relations[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["lineupPlayers", "lineupPlayers.competitor"]
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of lineups",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Lineup"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/lineup_players": {
            "get": {
                "summary": "Get list of lineup players",
                "description": "Returns list of lineup players",
                "operationId": "39e14e75016a90400e4b602041f3ccb0",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "lineup_ids",
                    "name": "lineup_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "competitor_ids",
                    "name": "competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "lineup_status",
                    "name": "lineup_status",
                    "in": "query",
                    "description": "Get lineup players that belong to a lineup with the status",
                    "schema": {
                        "type": "string",
                        "enum": ["expected", "official"]
                    }
                }, {
                    "parameter": "relations",
                    "name": "relations[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["competitor"]
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of lineup players",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/LineupPlayer"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/live_streams": {
            "get": {
                "summary": "Get list of live streams",
                "description": "Returns list of live streams",
                "operationId": "d9370f6367112799345e041dc5531d1e",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "skip_blocked_regions",
                    "name": "skip_blocked_regions",
                    "in": "query",
                    "description": "Get live streams that are not blocked in the client's regions",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "parameter": "relations",
                    "name": "relations[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["provider", "event.tournamentStage.tournament.competition.sport"]
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of live streams",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/LiveStream"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/mv_competitor_events": {
            "get": {
                "summary": "Get list of competitor events",
                "description": "Returns list of competitor events",
                "operationId": "d390a85b2d186c63c9994c46b85072da",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "min_start_time",
                    "name": "min_start_time",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "max_start_time",
                    "name": "max_start_time",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "competitor_ids",
                    "name": "competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "competition_ids",
                    "name": "competition_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "statuses",
                    "name": "statuses[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["notstarted", "inprogress", "finished", "interrupted", "postponed", "cancelled", "unknown", "deleted"]
                        }
                    }
                }, {
                    "parameter": "position",
                    "name": "position",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "event_ids",
                    "name": "event_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "skip_event_ids",
                    "name": "skip_event_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "event_competitors_cnt",
                    "name": "event_competitors_cnt",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "client_competition_type",
                    "name": "client_competition_type",
                    "in": "query",
                    "description": "Get objects with client competitions of the defined type",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "sport_ids",
                    "name": "sport_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "order_by",
                    "name": "order_by",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["start_time"]
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }],
                "responses": {
                    "200": {
                        "description": "A list of competitor events",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/MvCompetitorEvent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/market_competitors": {
            "get": {
                "summary": "Get list of market competitors",
                "description": "Returns list of market competitors",
                "operationId": "c0b2357b33431f2e985254ed53e61217",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "object_type",
                    "name": "object_type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "object_ids",
                    "name": "object_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "positions",
                    "name": "positions[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "competitor_ids",
                    "name": "competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "relations",
                    "name": "relations[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["competitor"]
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of market competitors",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/MarketCompetitor"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/markets": {
            "get": {
                "summary": "Get list of markets",
                "description": "Returns list of markets",
                "operationId": "522135fcb76e4c56485dfa7ba9bea594",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "object_type",
                    "name": "object_type",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["event", "tournament", "tournament_stage", "event_competitor"]
                    }
                }, {
                    "parameter": "object_ids",
                    "name": "object_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "market_type_ids",
                    "name": "market_type_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "period_ids",
                    "name": "period_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "with_odds",
                    "name": "with_odds",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "parameter": "odds_statuses",
                    "name": "odds_statuses[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "parameter": "provider_ids",
                    "name": "provider_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "line",
                    "name": "line",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "min_odds",
                    "name": "min_odds",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "provider_odds_cnt",
                    "name": "provider_odds_cnt",
                    "in": "query",
                    "description": "Get markets that have at least one set of odds for all the outcomes",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "live_odds",
                    "name": "live_odds",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "parameter": "incl_avg_odds_diff",
                    "name": "incl_avg_odds_diff",
                    "in": "query",
                    "description": "If set, each market will have the 'avg_odds_diff' prop, which means average odds difference between odds of opposing outcomes (it is used to determine which line to show on the initial load of odds tables)",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "parameter": "relations",
                    "name": "relations[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["marketType", "period", "odds", "odds.outcome", "odds.provider", "liveOdds", "liveOdds.outcome", "liveOdds.provider"]
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of markets",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Market"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/market_types": {
            "get": {
                "summary": "Get list of market types",
                "description": "Returns list of market types",
                "operationId": "b49b45010cc4a65b30c5a6b2714029f7",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of market types",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/MarketType"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/matches_json": {
            "get": {
                "summary": "Get a list of matches",
                "description": "Gets all available matches for the selected language.",
                "operationId": "faa80260ca5f7323e74450c902235028",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of matches",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "title": {
                                                            "type": "string"
                                                        },
                                                        "h_team": {
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "v_team": {
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "date": {
                                                            "type": "string"
                                                        },
                                                        "time": {
                                                            "type": "string"
                                                        },
                                                        "sport": {
                                                            "type": "object"
                                                        },
                                                        "league": {
                                                            "type": "object"
                                                        },
                                                        "extra": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/modified_events": {
            "get": {
                "summary": "Get list of modified events",
                "description": "Returns list of modified events",
                "operationId": "949e57ea635043c7743892c1ce19fa58",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "min_id",
                    "name": "min_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "order_by",
                    "name": "order_by",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }],
                "responses": {
                    "200": {
                        "description": "A list of modified events",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/ModifiedEvent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/odds": {
            "get": {
                "summary": "Get list of odds",
                "description": "Returns list of odds",
                "operationId": "39a68aa9040888ce9f2857b9ac01425e",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "live",
                    "name": "live",
                    "in": "query",
                    "description": "Get live odds",
                    "schema": {
                        "type": "boolean"
                    }
                }, {
                    "parameter": "market_ids",
                    "name": "market_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "outcome_ids",
                    "name": "outcome_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "provider_ids",
                    "name": "provider_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "statuses",
                    "name": "statuses[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "parameter": "min_odds",
                    "name": "min_odds",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "min_updated_at",
                    "name": "min_updated_at",
                    "in": "query",
                    "description": "In format YYYY-MM-DD HH:MM:SS",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of odds",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Odds"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/outcomes": {
            "get": {
                "summary": "Get list of outcomes",
                "description": "Returns list of outcomes",
                "operationId": "16339db68438810d5de644ac37ac554d",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "names",
                    "name": "names[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of outcomes",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Outcome"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/periods": {
            "get": {
                "summary": "Get list of periods",
                "description": "Returns list of periods",
                "operationId": "b30af2c0a33078f41cd3dfb394b1dfc6",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of periods",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Period"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/providers": {
            "get": {
                "summary": "Get list of providers",
                "description": "Returns list of providers",
                "operationId": "8a8b9e594127e117a9c83b234c7998ff",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "client_only",
                    "name": "client_only",
                    "in": "query",
                    "description": "Get client providers only",
                    "schema": {
                        "type": "boolean"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of providers",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Provider"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/provider_mappings": {
            "get": {
                "summary": "Get list of provider mappings",
                "description": "Returns list of provider mappings",
                "operationId": "e8863b086d49c916fe28a216da13c0b8",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "source_id",
                    "name": "source_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "ex_ids",
                    "name": "ex_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of provider mappings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/ProviderMapping"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/regions": {
            "get": {
                "summary": "Get list of regions",
                "description": "Returns list of regions",
                "operationId": "ccee2a99d885d0f59e09b4354487ab05",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/lang_id"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of regions",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Region"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/results": {
            "get": {
                "summary": "Get list of results",
                "description": "Returns list of event competitors",
                "operationId": "69f433a6e4bd2b354a1726d00432a9b4",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "event_competitor_ids",
                    "name": "event_competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of results",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Result"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/sources": {
            "get": {
                "summary": "Get list of sources",
                "description": "Returns list of sources",
                "operationId": "a4e39dc2f81b4eaab66c3e333eb951d9",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of sources",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Source"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/spocosy_mappings": {
            "get": {
                "summary": "Get list of spocosy mappings (Enetpulse)",
                "description": "Returns list of spocosy mappings",
                "operationId": "169fe9b594a385824f1bbec76af78693",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "ex_type",
                    "name": "ex_type",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "enum": ["sp_tournament_stage", "sp_event", "sp_event_incident", "sp_event_incident_type", "sp_event_incident_type_text", "sp_event_participant", "sp_incident", "sp_standing_type", "sp_standing_type_param", "sp_standing", "sp_standing_participant", "sp_venue", "sp_venue_object"]
                    },
                    "example": "sp_event"
                }, {
                    "parameter": "ex_ids",
                    "name": "ex_ids[]",
                    "in": "query",
                    "description": "IDs in Enetpulse's system",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "fk_ids",
                    "name": "fk_ids[]",
                    "in": "query",
                    "description": "IDs in Sportsindex's system",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of spocosy mappings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/SpocosyMapping"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/sports": {
            "get": {
                "summary": "Get list of sports",
                "description": "Returns list of sports",
                "operationId": "51c56c7162d2561d6bd6960a9dbd0a14",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/lang_id"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of sports",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Sport"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/sport_mappings": {
            "get": {
                "summary": "Get list of sport mappings",
                "description": "Returns list of sport mappings",
                "operationId": "79763b3ef262e14c18c2be2090b1a456",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "sport_ids",
                    "name": "sport_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "source_id",
                    "name": "source_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "$ref": "#\/components\/parameters\/sort"
                }],
                "responses": {
                    "200": {
                        "description": "A list of sport mappings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/SportMapping"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/standing_configs": {
            "get": {
                "summary": "Get list of standing configs",
                "description": "Returns list of standing configs",
                "operationId": "1b3dc3f0b60fc6dbb2ba8f3df5f48a22",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "standing_ids",
                    "name": "standing_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "stp_ids",
                    "name": "stp_ids[]",
                    "in": "query",
                    "description": "Standing type IDs",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of standing configs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/StandingConfig"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/standings": {
            "get": {
                "summary": "Get list of standings",
                "description": "Returns list of standings",
                "operationId": "232b9aa825150ca01933d086a20d3ae7",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "object_type",
                    "name": "object_type",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["sport", "competition", "tournament", "tournament_stage", "event", "event_competitor", "competitor"]
                    }
                }, {
                    "parameter": "object_ids",
                    "name": "object_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "names",
                    "name": "names[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "parameter": "relations",
                    "name": "relations[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["standingParticipants", "standingParticipants.competitor"]
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of standings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Standing"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/standing_data": {
            "get": {
                "summary": "Get list of standing data",
                "description": "Returns list of standing data",
                "operationId": "1cba916913dd6507a947dcd02e748d1d",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "standing_participant_ids",
                    "name": "standing_participant_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "stp_ids",
                    "name": "stp_ids[]",
                    "in": "query",
                    "description": "Standing type param IDs",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "sub_params",
                    "name": "sub_params[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of standing data",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/StandingData"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/standing_data\/team_avg": {
            "get": {
                "summary": "Get list of standing data grouped by team ID",
                "description": "Returns list of standing data grouped by team ID",
                "operationId": "0e503f7df31aa4dbce061411d6172be0",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "tournament_stage_id",
                    "name": "tournament_stage_id",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    },
                    "example": 1
                }, {
                    "parameter": "team_ids",
                    "name": "team_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "stp_ids",
                    "name": "stp_ids[]",
                    "in": "query",
                    "description": "Standing type param IDs",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of standing data grouped by team ID",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {}
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/standing_participants": {
            "get": {
                "summary": "Get list of standing participants",
                "description": "Returns list of standing participants",
                "operationId": "44a8b482d53ef58528329e210992b02b",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "standing_ids",
                    "name": "standing_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "competitor_ids",
                    "name": "competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "s_object_type",
                    "name": "s_object_type",
                    "in": "query",
                    "description": "Standing object type",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "s_name",
                    "name": "s_name",
                    "in": "query",
                    "description": "Standing name",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of standing participants",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/StandingParticipant"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/standing_types": {
            "get": {
                "summary": "Get list of standing types",
                "description": "Returns list of standing types",
                "operationId": "30d13b6d97266bd7daf3b0fab3cc1057",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of standing types",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/StandingType"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/standing_type_params": {
            "get": {
                "summary": "Get list of standing type params",
                "description": "Returns list of standing type params",
                "operationId": "e27dc7459deaf6bedf1467b67c7d859b",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "standing_type_ids",
                    "name": "standing_type_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of standing type params",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/StandingTypeParam"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/streaks": {
            "get": {
                "summary": "Get list of streaks",
                "description": "Returns list of streaks",
                "operationId": "b060f31d08459633f6c5caee7b21a538",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "streak_type_ids",
                    "name": "streak_type_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "competition_ids",
                    "name": "competition_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        }
                    }
                }, {
                    "parameter": "client_competition_type",
                    "name": "client_competition_type",
                    "in": "query",
                    "description": "Get streaks that have a client competition of the defined type or doesn't have a competition",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "type",
                    "name": "type",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["streak", "fact"]
                    }
                }, {
                    "parameter": "vparam",
                    "name": "vparam",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["home", "away", "total"]
                    }
                }, {
                    "parameter": "home_competitor_id",
                    "name": "home_competitor_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "away_competitor_id",
                    "name": "away_competitor_id",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "min_count",
                    "name": "min_count",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    }
                }, {
                    "parameter": "competitor_ids",
                    "name": "competitor_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of streaks",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Streak"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/streak_types": {
            "get": {
                "summary": "Get list of streak types",
                "description": "Returns list of streak types",
                "operationId": "657c6e2c194a3c4cf3c96c2c16c3ebaa",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of streak types",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/StreakType"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/streak_type_texts": {
            "get": {
                "summary": "Get list of streak type texts [DEPRECATED]",
                "description": "Returns list of streak type texts [DEPRECATED AS OF APRIL 2022]",
                "operationId": "00ee726514c90bd3ec01c601b79d8862",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "streak_type_ids",
                    "name": "streak_type_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "language_ids",
                    "name": "language_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of streak type texts",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/StreakTypeText"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/suspension_charges": {
            "get": {
                "summary": "Get list of suspension charges",
                "description": "Returns list of suspension charges",
                "operationId": "a5effb7903ee496586246b843a10c9d4",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of suspension charges",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/SuspensionCharge"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/suspensions": {
            "get": {
                "summary": "Get list of suspensions",
                "description": "Returns list of suspensions",
                "operationId": "e2199a265b73196b8d0f15be00c1ad42",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "competition_ids",
                    "name": "competition_ids[]",
                    "in": "query",
                    "description": "Return only the suspensions with the given competitions",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "player_ids",
                    "name": "player_ids[]",
                    "in": "query",
                    "description": "Return only the suspensions with the given players",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "team_ids",
                    "name": "team_ids[]",
                    "in": "query",
                    "description": "Return only the suspensions with the given teams",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "event_ids",
                    "name": "event_ids[]",
                    "in": "query",
                    "description": "Return only the suspensions with the given events",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of suspensions",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "allOf": [{
                                                        "$ref": "#\/components\/schemas\/LineupPlayer"
                                                    }, {
                                                        "properties": {
                                                            "competitor": {
                                                                "$ref": "#\/components\/schemas\/Competitor"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }, {
                                                        "properties": {
                                                            "last_update": {
                                                                "type": "string"
                                                            },
                                                            "player_id": {
                                                                "type": "integer"
                                                            },
                                                            "team_id": {
                                                                "type": "integer"
                                                            },
                                                            "competition_id": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }]
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/suspension_events": {
            "get": {
                "summary": "Get list of suspension events",
                "description": "Returns list of suspension events",
                "operationId": "73fd7ba5f2bd1906a58fba5d97ae96c8",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "suspension_ids",
                    "name": "suspension_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of suspension events",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/SuspensionEvent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/tournaments": {
            "get": {
                "summary": "Get list of tournaments",
                "description": "Returns list of tournaments",
                "operationId": "727785a814ca9997ca891494c35712c5",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "competition_ids",
                    "name": "competition_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "ts_max_start_time",
                    "name": "ts_max_start_time",
                    "in": "query",
                    "description": "Get tournaments that have at least one tournament stage with max. start time",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "ts_min_end_time",
                    "name": "ts_min_end_time",
                    "in": "query",
                    "description": "Get tournaments that have at least one tournament stage with min. end time",
                    "schema": {
                        "type": "string"
                    }
                }, {
                    "parameter": "no_old",
                    "name": "no_old",
                    "in": "query",
                    "description": "Get current and upcoming tournaments only",
                    "schema": {
                        "type": "boolean"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of tournaments",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Tournament"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/tournament_stages": {
            "get": {
                "summary": "Get list of tournament stages",
                "description": "Returns list of tournament stages",
                "operationId": "deecbdc0a1d8cdcc7c24be06b9fa4c17",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/lang_id"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "tournament_ids",
                    "name": "tournament_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of tournament stages",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/TournamentStage"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/tournament_stage_metas": {
            "get": {
                "summary": "Get list of tournament stage metas",
                "description": "Returns list of tournament stage metas",
                "operationId": "11fc30437b9124f306c9fe5d6cf4e98b",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "tournament_stage_ids",
                    "name": "tournament_stage_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of tournament stage metas",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/TournamentStageMeta"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/translations": {
            "get": {
                "summary": "Get list of translations",
                "description": "Returns list of translations",
                "operationId": "ecee4c59cba20fd72cdc6b9c1d8bc084",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "type",
                    "name": "type",
                    "in": "query",
                    "schema": {
                        "type": "string",
                        "enum": ["competition", "competitor", "region", "sport", "tournament_stage", "injury_type", "competition_stage_template", "event_incident_type_text"]
                    }
                }, {
                    "parameter": "fk_ids",
                    "name": "fk_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "language_ids",
                    "name": "language_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "slug",
                    "name": "slug",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of translations",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Translation"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/venues": {
            "get": {
                "summary": "Get list of venues",
                "description": "Returns list of venues",
                "operationId": "9ad239c224770535ba8efc4736631ae1",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }],
                "responses": {
                    "200": {
                        "description": "A list of venues",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/Venue"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/venue_metas": {
            "get": {
                "summary": "Get list of venue metas",
                "description": "Returns list of venue metas",
                "operationId": "2f8a6796049fb40fcbc675b72d5de3e3",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "venue_ids",
                    "name": "venue_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of venue metas",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/VenueMeta"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        },
        "\/api\/venue_objects": {
            "get": {
                "summary": "Get list of venue objects",
                "description": "Returns list of venue objects",
                "operationId": "0b5c9ff2bfe8d543cdca840969172a00",
                "parameters": [{
                    "$ref": "#\/components\/parameters\/ids"
                }, {
                    "$ref": "#\/components\/parameters\/page"
                }, {
                    "$ref": "#\/components\/parameters\/del"
                }, {
                    "$ref": "#\/components\/parameters\/per_page"
                }, {
                    "parameter": "object_ids",
                    "name": "object_ids[]",
                    "in": "query",
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "parameter": "object_type",
                    "name": "object_type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "A list of venue objects",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [{
                                        "$ref": "#\/components\/schemas\/SimplePagination"
                                    }, {
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#\/components\/schemas\/VenueObject"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }]
                                }
                            }
                        }
                    }
                },
                "security": [{
                    "passport": []
                }]
            }
        }
    },
    "components": {
        "schemas": {
            "SimplePagination": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "per_page": {
                        "type": "integer",
                        "maximum": 1000,
                        "example": 100
                    }
                },
                "type": "object"
            },
            "ClientForm": {
                "required": ["grant_type", "client_id", "client_secret"],
                "properties": {
                    "grant_type": {
                        "description": "Should have 'client_credentials'",
                        "type": "string",
                        "example": "client_credentials"
                    },
                    "client_id": {
                        "description": "Your client ID",
                        "type": "integer",
                        "example": 3
                    },
                    "client_secret": {
                        "description": "Your client secret",
                        "type": "string",
                        "example": "ZryZHFAo0wyxYsWWcVUCGIaa4H4HXoVIr7g1vtpJ"
                    }
                },
                "type": "object"
            },
            "SuccessJson": {
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ArchiveMarket": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\ArchiveMarket",
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "market_type_id": {
                        "type": "integer"
                    },
                    "period_id": {
                        "type": "integer"
                    },
                    "line": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ArchiveMarketOutcome": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\ArchiveMarketOutcome",
                        "type": "integer"
                    },
                    "market_id": {
                        "type": "integer"
                    },
                    "outcome_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ArchiveOdds": {
                "properties": {
                    "market_outcome_id": {
                        "description": "App\\Models\\ArchiveOdds",
                        "type": "integer"
                    },
                    "provider_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["start", "close", "high", "low"]
                    },
                    "odds": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BlockedRegion": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\BlockedRegion",
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["channel", "broadcaster", "broadcasterimport"]
                    },
                    "fk_id": {
                        "type": "integer"
                    },
                    "region_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BroadcasterImport": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\BroadcasterImport",
                        "type": "integer"
                    },
                    "channel_broadcaster_id": {
                        "type": "integer"
                    },
                    "external_id": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["parsed", "unmapped", "automated", "ignored", "noevent", "manually"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "BlockedRegion": {
                        "$ref": "#\/components\/schemas\/BlockedRegion"
                    }
                },
                "type": "object"
            },
            "Channel": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Channel",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "logo_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "handle": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["yes", "no"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ClientCompetition": {
                "properties": {
                    "client_id": {
                        "description": "App\\Models\\ClientCompetition",
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "competition_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Competition": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Competition",
                        "type": "integer"
                    },
                    "sport_id": {
                        "type": "integer"
                    },
                    "region_id": {
                        "type": "integer"
                    },
                    "parent_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": ["m", "f", "mix"],
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CompetitionMapping": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\CompetitionMapping",
                        "type": "integer"
                    },
                    "source_id": {
                        "type": "integer"
                    },
                    "ex_id": {
                        "type": "integer"
                    },
                    "ex_name": {
                        "type": "string"
                    },
                    "sport_id": {
                        "type": "integer"
                    },
                    "region_id": {
                        "type": "integer"
                    },
                    "gender": {
                        "type": "string",
                        "enum": ["m", "f", "mix"]
                    },
                    "competition_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CompetitionMeta": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\CompetitionMeta",
                        "type": "integer"
                    },
                    "competition_id": {
                        "type": "integer"
                    },
                    "source_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["category", "country", "date", "drawsize", "format", "name", "par", "prizemoney", "spocosy_id", "surface", "tour"]
                    },
                    "value": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CompetitionStageTemplate": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\CompetitionStageTemplate",
                        "type": "integer"
                    },
                    "competition_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pattern": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Competitor": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Competitor",
                        "type": "integer"
                    },
                    "sport_id": {
                        "type": "integer"
                    },
                    "region_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "source_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": ["m", "f", "mix"],
                        "nullable": true
                    },
                    "competitor_type": {
                        "type": "string",
                        "enum": ["team", "official", "coach", "athlete", "organization", "horse", "dog"],
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CompetitorAthleteTeam": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\CompetitorAthleteTeam",
                        "type": "integer"
                    },
                    "competitor_athlete_id": {
                        "type": "integer"
                    },
                    "competitor_team_id": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CompetitorMapping": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\CompetitorMapping",
                        "type": "integer"
                    },
                    "sport_id": {
                        "type": "integer"
                    },
                    "region_id": {
                        "type": "integer"
                    },
                    "source_id": {
                        "type": "integer"
                    },
                    "ex_id": {
                        "type": "integer"
                    },
                    "ex_name": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": ["m", "f", "mix"]
                    },
                    "competitor_type": {
                        "type": "string",
                        "enum": ["team", "official", "coach", "athlete", "organization", "horse", "dog"]
                    },
                    "manual": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "competitor_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CompetitorMeta": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\CompetitorMeta",
                        "type": "integer"
                    },
                    "competitor_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["address", "age", "conference", "country", "countryofbirth", "currentteam", "dateofbirth", "division", "e_mail", "extra", "fax", "filename", "foot", "founded", "height", "isnationalteam", "logo", "name_first", "name_full", "name_last", "name_short", "name_nick", "name_code", "nationality", "phone", "placeofbirth", "position", "shoots", "status", "university", "website_url", "weight", "yearwentpro", "twitter_handle", "facebook_url", "wikipedia_url"]
                    },
                    "value": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Country": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Country",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "iso2_code": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Event": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Event",
                        "type": "integer"
                    },
                    "score": {
                        "type": "string"
                    },
                    "tournament_stage_id": {
                        "type": "integer"
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["notstarted", "inprogress", "finished", "interrupted", "postponed", "cancelled", "unknown", "deleted"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventCompetitor": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\EventCompetitor",
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "competitor_id": {
                        "type": "integer"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventForecast": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\EventForecast",
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["daily", "hourly"]
                    },
                    "forecast": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventIncident": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\EventIncident",
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "event_incident_type_id": {
                        "type": "integer"
                    },
                    "elapsed": {
                        "type": "integer"
                    },
                    "elapsed_plus": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "sortorder": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventIncidentDetail": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\EventIncidentDetail",
                        "type": "integer"
                    },
                    "event_incident_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["player1", "player2", "team", "spectators", "venue", "card_type", "injury_time", "comment", "goal_type", "homepos", "awaypos", "formation", "status_descFK", "statustime", "incidentFK", "coordinates", "event_incidentFK", "second_coordinates", "vertical_coordinates", "team1", "team2", "coach1", "coach2", "goalkeeper", "runningscore", "ordinarytime", "extratime", "halftime", "verified"]
                    },
                    "value": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventIncidentType": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\EventIncidentType",
                        "type": "integer"
                    },
                    "player1": {
                        "type": "string"
                    },
                    "player2": {
                        "type": "string"
                    },
                    "team": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "subtype1": {
                        "type": "string",
                        "nullable": true
                    },
                    "subtype2": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "enum": ["throwin", "foulcommit", "shoton", "shotoff", "cross", "offside", "treatment", "corner", "goalkick", "goal", "card", "subst", "special", "ns", "1h", "ht", "2h", "f", "int", "a", "f-aet", "p", "f-ap", "can", "1ho", "2ho", "counter", "w-et", "w-fp", "kickoff", "c", "formation", "pass", "tackle", "ballwon", "kod", "e-1ho", "assist", "fieldpossession", "var", "goal_line_technology"],
                        "nullable": true
                    },
                    "comment_type": {
                        "type": "string",
                        "nullable": true
                    },
                    "player2_type": {
                        "type": "string",
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventIncidentTypeText": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\EventIncidentTypeText",
                        "type": "integer"
                    },
                    "event_incident_type_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventMeta": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\EventMeta",
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventSearchItem": {
                "properties": {
                    "language_id": {
                        "description": "App\\Models\\EventSearchItem",
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "sport_id": {
                        "typ
e": "integer"
                    },
                    "competition_id": {
                        "type": "integer"
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FinishedEvent": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\FinishedEvent",
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Incident": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Incident",
                        "type": "integer"
                    },
                    "incident_type_id": {
                        "type": "integer"
                    },
                    "event_competitor_id": {
                        "type": "integer"
                    },
                    "competitor_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "elapsed": {
                        "type": "integer"
                    },
                    "elapsed_plus": {
                        "type": "integer"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IncidentType": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\IncidentType",
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InjuryTeam": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\InjuryTeam",
                        "type": "integer"
                    },
                    "injury_id": {
                        "type": "integer"
                    },
                    "competitor_id": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InjuryType": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\InjuryType",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Language": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Language",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Lineup": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Lineup",
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "competitor_id": {
                        "type": "integer"
                    },
                    "formation": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": ["expected", "official"]
                    },
                    "last_update": {
                        "type": "string"
                    },
                    "kit": {
                        "type": "integer",
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LineupPlayer": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\LineupPlayer",
                        "type": "integer"
                    },
                    "lineup_id": {
                        "type": "integer"
                    },
                    "shirt_number": {
                        "type": "integer",
                        "nullable": true
                    },
                    "pos": {
                        "type": "number",
                        "nullable": true
                    },
                    "position": {
                        "type": "string",
                        "nullable": true
                    },
                    "lineup_type_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LiveStream": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\LiveStream",
                        "type": "integer"
                    },
                    "provider_id": {
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Market": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Market",
                        "type": "integer"
                    },
                    "object_type": {
                        "type": "string",
                        "enum": ["event", "tournament", "tournament_stage", "event_competitor"]
                    },
                    "object_id": {
                        "type": "integer"
                    },
                    "market_type_id": {
                        "type": "integer"
                    },
                    "period_id": {
                        "type": "integer"
                    },
                    "line": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MarketCompetitor": {
                "properties": {
                    "object_type": {
                        "description": "App\\Models\\MarketCompetitor",
                        "type": "string",
                        "enum": ["event", "tournament", "tournament_stage"]
                    },
                    "object_id": {
                        "type": "integer"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "competitor_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MarketType": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\MarketType",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_short": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ModifiedEvent": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\ModifiedEvent",
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MvCompetitorEvent": {
                "properties": {
                    "event_id": {
                        "description": "App\\Models\\MvCompetitorEvent",
                        "type": "integer"
                    },
                    "competitor_id": {
                        "type": "integer"
                    },
                    "competition_id": {
                        "type": "integer"
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["notstarted", "inprogress", "finished", "interrupted", "postponed", "cancelled", "unknown", "deleted"]
                    },
                    "position": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Odds": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Odds",
                        "type": "integer"
                    },
                    "market_id": {
                        "type": "integer"
                    },
                    "outcome_id": {
                        "type": "integer"
                    },
                    "provider_id": {
                        "type": "integer"
                    },
                    "odds": {
                        "type": "string"
                    },
                    "odds_prev": {
                        "type": "string",
                        "nullable": true
                    },
                    "coupon_key": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": ["online", "offline", "deleted", "closed"]
                    },
                    "source_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Outcome": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Outcome",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Period": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Period",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "shortname": {
                        "type": "string",
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Provider": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Provider",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "logo_url": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProviderMapping": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\ProviderMapping",
                        "type": "integer"
                    },
                    "source_id": {
                        "type": "integer"
                    },
                    "ex_id": {
                        "type": "integer"
                    },
                    "ex_name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Region": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Region",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parent_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "fifa_code": {
                        "type": "string",
                        "nullable": true
                    },
                    "ioc_code": {
                        "type": "string",
                        "nullable": true
                    },
                    "img": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Result": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Result",
                        "type": "integer"
                    },
                    "event_competitor_id": {
                        "type": "integer"
                    },
                    "period_id": {
                        "type": "integer"
                    },
                    "result": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Source": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Source",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SpocosyMapping": {
                "properties": {
                    "ex_type": {
                        "description": "App\\Models\\SpocosyMapping",
                        "type": "string",
                        "enum": ["sp_tournament_stage", "sp_event", "sp_event_incident", "sp_event_incident_type", "sp_event_incident_type_text", "sp_event_participant", "sp_incident", "sp_standing_type", "sp_standing_type_param", "sp_standing", "sp_standing_participant", "sp_venue", "sp_venue_object"]
                    },
                    "ex_id": {
                        "type": "integer"
                    },
                    "fk_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Sport": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Sport",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_short": {
                        "type": "string"
                    },
                    "logo_url": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SportMapping": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\SportMapping",
                        "type": "integer"
                    },
                    "source_id": {
                        "type": "integer"
                    },
                    "ex_id": {
                        "type": "integer"
                    },
                    "ex_name": {
                        "type": "string"
                    },
                    "sport_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SportMeta": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\SportMeta",
                        "type": "integer"
                    },
                    "sport_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["sport_calendar_order", "head_to_head"]
                    },
                    "value": {
                        "type": "string"
                    },
                    "source_id": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["yes", "no"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Standing": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Standing",
                        "type": "integer"
                    },
                    "object_type": {
                        "type": "string",
                        "enum": ["sport", "competition", "tournament", "tournament_stage", "event", "event_competitor", "competitor"]
                    },
                    "object_id": {
                        "type": "integer"
                    },
                    "standing_type_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StandingConfig": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\StandingConfig",
                        "type": "integer"
                    },
                    "standing_id": {
                        "type": "integer"
                    },
                    "standing_type_param_id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "sub_param": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StandingData": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\StandingData",
                        "type": "integer"
                    },
                    "standing_participant_id": {
                        "type": "integer"
                    },
                    "standing_type_param_id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "sub_param": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StandingParticipant": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\StandingParticipant",
                        "type": "integer"
                    },
                    "standing_id": {
                        "type": "integer"
                    },
                    "competitor_id": {
                        "type": "integer"
                    },
                    "rank": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StandingType": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\StandingType",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StandingTypeParam": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\StandingTypeParam",
                        "type": "integer"
                    },
                    "standing_type_id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Streak": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Streak",
                        "type": "integer"
                    },
                    "competitor_id": {
                        "type": "integer"
                    },
                    "competition_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "opponent_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "enum": ["streak", "fact"]
                    },
                    "vparam": {
                        "type": "string",
                        "enum": ["home", "away", "total"]
                    },
                    "streak_type_id": {
                        "type": "integer"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StreakType": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\StreakType",
                        "type": "integer"
                    },
                    "sport_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_short": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "line": {
                        "type": "string",
                        "nullable": true
                    },
                    "market_type_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "outcome_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "secondary_outcome_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "threshold": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StreakTypeText": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\StreakTypeText",
                        "type": "integer"
                    },
                    "streak_type_id": {
                        "type": "integer"
                    },
                    "language_id": {
                        "type": "integer"
                    },
                    "text": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SuspensionCharge": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\SuspensionCharge",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SuspensionEvent": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\SuspensionEvent",
                        "type": "integer"
                    },
                    "suspension_id": {
                        "type": "integer"
                    },
                    "event_id": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Tournament": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Tournament",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "competition_id": {
                        "type": "integer"
                    },
                    "ex_id": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TournamentStage": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\TournamentStage",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tournament_id": {
                        "type": "integer"
                    },
                    "gender": {
                        "type": "string",
                        "enum": ["m", "f", "mix"],
                        "nullable": true
                    },
                    "region_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "start_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "end_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TournamentStageMeta": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\TournamentStageMeta",
                        "type": "integer"
                    },
                    "tournament_stage_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Translation": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Translation",
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["streak_type", "competitor_mapping", "competition", "competitor", "region", "sport", "tournament_stage", "injury_type", "competition_stage_template", "event_incident_type_text"]
                    },
                    "fk_id": {
                        "type": "integer"
                    },
                    "language_id": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string",
                        "nullable": true
                    },
                    "manual": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Venue": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\Venue",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region_id": {
                        "type": "integer"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VenueMeta": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\VenueMeta",
                        "type": "integer"
                    },
                    "venue_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VenueObject": {
                "properties": {
                    "id": {
                        "description": "App\\Models\\VenueObject",
                        "type": "integer"
                    },
                    "object_type": {
                        "type": "string",
                        "enum": ["event"]
                    },
                    "object_id": {
                        "type": "integer"
                    },
                    "venue_id": {
                        "type": "integer"
                    },
                    "neutral": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "del": {
                        "type": "string",
                        "enum": ["no", "yes"]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "page": {
                "name": "page",
                "in": "query",
                "description": "Page number (default: 1)",
                "schema": {
                    "type": "integer"
                }
            },
            "per_page": {
                "name": "per_page",
                "in": "query",
                "description": "Number of items to list per page (default: 100, max: 1000)",
                "schema": {
                    "type": "integer"
                }
            },
            "ids": {
                "name": "ids[]",
                "in": "query",
                "description": "Return only the items having the given id",
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "lang_id": {
                "name": "lang_id",
                "in": "query",
                "description": "Add translation name and slug to each item",
                "schema": {
                    "type": "integer"
                }
            },
            "hide_props": {
                "name": "hide_props",
                "in": "query",
                "description": "Hide properties that are not important",
                "schema": {
                    "type": "boolean"
                }
            },
            "sort": {
                "name": "sort",
                "in": "query",
                "description": "Define sort order (default: asc)",
                "schema": {
                    "type": "string",
                    "enum": ["asc", "desc"]
                }
            },
            "del": {
                "name": "del",
                "in": "query",
                "description": "Get deleted or non-deleted only",
                "schema": {
                    "type": "string",
                    "enum": ["no", "yes"]
                }
            },
            "search": {
                "name": "search",
                "in": "query",
                "description": "Return list of objects containing the search string",
                "schema": {
                    "type": "string"
                }
            },
            "search_lang_id": {
                "name": "search_lang_id",
                "in": "query",
                "schema": {
                    "type": "integer"
                }
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "flows": {
                    "clientCredentials": {
                        "authorizationUrl": "\/oauth\/authorize",
                        "tokenUrl": "\/oauth\/token",
                        "refreshUrl": "\/token\/refresh",
                        "scopes": []
                    }
                }
            }
        }
    },
    "tags": [{
        "name": "authentication",
        "description": "Operations about authentication"
    }]
}
